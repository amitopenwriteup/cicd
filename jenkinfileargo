 def dockerfile = 'dockerfile'
 def registry = 'localhost:5000'
 def imageName = 'myimage'
 def imageTag = 'latest'
 def manifestFile = 'kubernetes-manifest.yaml'
 def namespace = 'default'
 def IMAGE_BRANCH_TAG = "${registry}/${imageName}:${imageTag}"
pipeline {
    agent any
    
    // Define variables at the top level
//    def dockerfile = 'dockerfile'
  //  def registry = 'localhost:5000'
    // def imageName = 'myimage'
    // def imageTag = 'latest'
    // def manifestFile = 'k8s-deployment.yaml'
    // def namespace = 'default'
    
    stages {
        stage('Checkout the Git repository') {
            steps {
                git branch: 'master', url: 'https://github.com/amitopenwriteup/cicd.git'
            }
        }
        stage('Build Docker image') {
            steps {
                script {
                    def dockerImage = docker.build("${registry}/${imageName}:${imageTag}", "-f ${dockerfile} .")
                    dockerImage.push()
                }
            }
        }
    stage('Add GitHub to Known Hosts') {
    steps {
        sh '''
        mkdir -p ~/.ssh
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        '''
    }
}
stage('Update Manifest') {
    steps {
        script {
            // Checkout the repository with the provided credentials
            checkout([$class: 'GitSCM',
                      branches: [[name: 'master']],
                      doGenerateSubmoduleConfigurations: false,
                      extensions: [],
                      submoduleCfg: [],
                      userRemoteConfigs: [[credentialsId:'a1a4d74c-56f8-4ce5-a60b-31a2962f49f0', url: 'https://github.com/amitopenwriteup/cicd.git']]
            ])
          sh "rm -rf myargojenkins"
          sh "git clone https://github.com/amitopenwriteup/cicd.git"
          sh "cd myargojenkins"
           dir('myargojenkins'){
            // Change directory to the checked-out repository
                // Apply the transformations
                sh """
                sed -i \
                    -e "s|{{NAMESPACE}}|${namespace}|g" \
                    -e "s|{{PULL_IMAGE}}|${IMAGE_BRANCH_TAG}|g" \
                    ${manifestFile}
                """

                // Configure Git user information

                // Commit the changes
                sh "git add ${manifestFile}"
                sh "git commit -m 'Updated manifest for ${namespace} with image ${IMAGE_BRANCH_TAG}'"

                // Push the changes to the main branch
                sh "git push origin main"
        }
      }
    }
   }
  }
}
