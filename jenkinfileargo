 def dockerfile = 'dockerfile'
 def registry = 'localhost:5000'
 def imageName = 'myimage'
 def imageTag = 'latest'
 def manifestFile = 'kubernetes-manifest.yaml'
 def namespace = 'default'
 def IMAGE_BRANCH_TAG = "${registry}/${imageName}:${imageTag}"
pipeline {
    agent any
    
    // Define variables at the top level
//    def dockerfile = 'dockerfile'
  //  def registry = 'localhost:5000'
    // def imageName = 'myimage'
    // def imageTag = 'latest'
    // def manifestFile = 'k8s-deployment.yaml'
    // def namespace = 'default'
    
    stages {
        stage('Checkout the Git repository') {
            steps {
                git branch: 'master', url: 'https://github.com/amitopenwriteup/cicd.git'
            }
        }
        stage('Build Docker image') {
            steps {
                script {
                    def dockerImage = docker.build("${registry}/${imageName}:${imageTag}", "-f ${dockerfile} .")
                    dockerImage.push()
                }
            }
        }
    stage('Add GitHub to Known Hosts') {
    steps {
        sh '''
        mkdir -p ~/.ssh
        ssh-keyscan github.com >> ~/.ssh/known_hosts
        '''
    }
}
stage('Update Manifest') {
    steps {
        script {
            // Checkout the repository with the provided credentials
            checkout([$class: 'GitSCM',
                      branches: [[name: 'main']],
                      doGenerateSubmoduleConfigurations: false,
                      extensions: [],
                      submoduleCfg: [],
                      userRemoteConfigs: [[credentialsId: '40345377-db49-4cd1-ac24-f7e677a8c685',
                                           url: 'git@github.com:amitopenwriteup/myargojenkins.git']]
            ])

            // Change directory to the checked-out repository
            dir('myargojenkins') {
                // Apply the transformations
                sh """
                sed -i \
                    -e "s|{{NAMESPACE}}|${namespace}|g" \
                    -e "s|{{PULL_IMAGE}}|${IMAGE_BRANCH_TAG}|g" \
                    ${manifestFile}
                """

                // Configure Git user information
                sh "git config user.name 'amit'"
                sh "git config user.email 'amit@example.com'"

                // Commit the changes
                sh "git add ${manifestFile}"
                sh "git commit -m 'Updated manifest for ${namespace} with image ${IMAGE_BRANCH_TAG}'"

                // Push the changes to the main branch
                sh "git push origin main"
            }
        }
    }
   }
  }
}
